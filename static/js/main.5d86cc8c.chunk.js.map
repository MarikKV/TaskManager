{"version":3,"sources":["store/signin/reducer.js","store/signup/reducer.js","store/addtask/reducer.js","store/edittask/reducer.js","store/reducer.js","store/signin/actions.js","store/signup/actions.js","store/addtask/actions.js","store/edittask/actions.js","components/Header.js","components/ModalWindow.js","components/ModalWindowContainer.js","components/Task.js","components/Home.js","components/AddTask.js","components/AddTaskContainer.js","components/SignIn.js","components/SignInContainer.js","components/SignUp.js","components/SignUpContainer.js","App.js","serviceWorker.js","index.js","componentsStyle/Task.module.css","componentsStyle/Header.module.css","componentsStyle/Home.module.css"],"names":["defaultState","email","password","repeatPassword","nickname","disabled","taskname","taskdescribe","shareTo","share","deadline","logedIn","combineReducers","signin","state","arguments","length","undefined","action","type","Object","objectSpread","payload","signup","addtask","edittask","Header","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","to","process","Component","ModalWindow","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeTaskname","bind","assertThisInitialized","onChangeTaskdescribe","onSubmit","e","setTasknameText","target","value","setTaskdescribeText","preventDefault","user","taskId","task","users","JSON","parse","localStorage","getItem","username","useremail","console","log","name","tasks","setItem","stringify","Modal","assign","size","aria-labelledby","centered","closeButton","Title","Body","Form","s","new_task_block","Group","controlId","Label","new_task_label","Control","defaultValue","placeholder","onChange","describe_field","Button","onClick","refreshTasks","onHide","ModalWindowContainer","components_ModalWindow","show","mapDispatchToProps","connect","Task","taskToEdit","showModal","error","isLoaded","items","shareItems","SharedTasks","allTasks","push","setState","x","_this2","splice","setTimeout","_this3","_this$state","message","Card","map","item","task_block","key","Text","ButtonToolbar","align","deleteTask","Footer","components_ModalWindowContainer","card_blok","lds_roller","React","Home","loaded","numerOfUserTasks","numerOfsharedTasks","tasks_info_block","tasks_info_left","tasks_info_right","Badge","AddTask","taskadded","onChangeSharename","onChangeShare","setShareToText","setTaskShare","newTask","tasksNum","_React$createElement","_React$createElement2","shareblock","Alert","as","Row","Col","sm","Check","label","defineProperty","AddTaskContainer","components_AddTask","SignIn","login","onEmailChange","onPasswordChange","setEmailText","setPasswordText","userName","userEmail","window","location","faillogin","form_sign_in","SignInContainer","components_SignIn","SignUp","passCheck","onNicknameChange","onRepeatPasswordChange","setNicknameText","setDisabledText","setRepeatPasswordText","newUser","firstUser","SignUpContainer","components_SignUp","store","createStore","allRedusers","App","es","react_router_dom","basename","react_router","path","component","exact","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5d86cc8c.chunk.js","sourcesContent":["import {SIGNIN_CHANGE_EMAIL_TEXT, SIGNIN_CHANGE_PASSWORD_TEXT} from \"./actions\";\r\n\r\nconst defaultState = {\r\n  email: '',\r\n  password: ''\r\n};\r\n\r\nexport const signinReduser = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SIGNIN_CHANGE_EMAIL_TEXT: \r\n      return {\r\n        ...state,\r\n        email: action.payload\r\n      }\r\n    case SIGNIN_CHANGE_PASSWORD_TEXT: \r\n      return {\r\n        ...state,\r\n        password: action.payload\r\n      }\r\n  }\r\n  return state;\r\n}\r\n\r\n","import {\r\n     SIGNUP_CHANGE_EMAIL_TEXT,\r\n     SIGNUP_CHANGE_PASSWORD_TEXT, \r\n     SIGNUP_CHANGE_REPEAT_PASSWORD_TEXT, \r\n     SIGNUP_CHANGE_NICKNAME_TEXT, \r\n     SIGNUP_CHANGE_DISABLED} from \"./actions\"\r\n\r\nconst defaultState = {\r\n  email: '',\r\n  password: '',\r\n  repeatPassword: '',\r\n  nickname: '',\r\n  disabled: 'disabled'\r\n};\r\n\r\nexport const signupReduser = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SIGNUP_CHANGE_EMAIL_TEXT: \r\n      return {\r\n        ...state,\r\n        email: action.payload\r\n      }\r\n    case SIGNUP_CHANGE_PASSWORD_TEXT: \r\n      return {\r\n        ...state,\r\n        password: action.payload\r\n      }\r\n    case SIGNUP_CHANGE_REPEAT_PASSWORD_TEXT: \r\n      return {\r\n        ...state,\r\n        repeatPassword: action.payload\r\n      }\r\n    case SIGNUP_CHANGE_NICKNAME_TEXT: \r\n    return {\r\n      ...state,\r\n      nickname: action.payload\r\n    }\r\n    case SIGNUP_CHANGE_DISABLED: \r\n    return {\r\n      ...state,\r\n      disabled: action.payload\r\n    }\r\n  } \r\n  return state;\r\n}\r\n","import {\r\n    ADD_TASKNAME_TEXT,\r\n    ADD_TASKDESCRIBE_TEXT, \r\n    ADD_SHARE_TO_TEXT,\r\n    ADD_TASK_SHARE,\r\n    ADD_TASK_DEADLINE_CHANGE_DATE} from \"./actions\"\r\n\r\nconst defaultState = {\r\n  taskname: '',\r\n  taskdescribe: '',\r\n  shareTo: '',\r\n  share: 'false',\r\n  deadline: '',\r\n  logedIn: ''\r\n};\r\n\r\nexport const addTaskReduser = (state = defaultState, action) => {\r\n switch (action.type) {\r\n   case ADD_TASKNAME_TEXT: \r\n     return {\r\n       ...state,\r\n       taskname: action.payload\r\n     }\r\n   case ADD_TASKDESCRIBE_TEXT: \r\n     return {\r\n       ...state,\r\n       taskdescribe: action.payload\r\n     }\r\n    case ADD_SHARE_TO_TEXT: \r\n     return {\r\n       ...state,\r\n       shareTo: action.payload\r\n     }\r\n    case ADD_TASK_DEADLINE_CHANGE_DATE: \r\n    return {\r\n     ...state,\r\n     deadline: action.payload\r\n   }\r\n   case ADD_TASK_SHARE: \r\n    return {\r\n     ...state,\r\n     share: action.payload\r\n   }\r\n }\r\n return state;\r\n}\r\n\r\n","import {\r\n    ADD_TASKNAME_TEXT,\r\n    ADD_TASKDESCRIBE_TEXT\r\n   } from \"./actions\"\r\n\r\nconst defaultState = {\r\n  taskname: '',\r\n  taskdescribe: ''\r\n};\r\n\r\nexport const editTaskReduser = (state = defaultState, action) => {\r\n switch (action.type) {\r\n   case ADD_TASKNAME_TEXT: \r\n     return {\r\n       ...state,\r\n       taskname: action.payload\r\n     }\r\n   case ADD_TASKDESCRIBE_TEXT: \r\n     return {\r\n       ...state,\r\n       taskdescribe: action.payload\r\n     }\r\n }\r\n return state;\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { signinReduser } from \"./signin/reducer\";\r\nimport { signupReduser } from \"./signup/reducer\";\r\nimport { addTaskReduser } from \"./addtask/reducer\";\r\nimport { editTaskReduser } from \"./edittask/reducer\";\r\n\r\n\r\nexport default combineReducers({\r\n  signin: signinReduser,\r\n  signup: signupReduser,\r\n  addtask: addTaskReduser,\r\n  edittask: editTaskReduser\r\n})\r\n\r\n","export const SIGNIN_CHANGE_EMAIL_TEXT = 'SIGNIN_CHANGE_EMAIL_TEXT';\r\nexport const SIGNIN_CHANGE_PASSWORD_TEXT = 'SIGNIN_CHANGE_PASSWORD_TEXT';\r\n\r\n\r\nexport const setEmailText = email => ({\r\n    type: SIGNIN_CHANGE_EMAIL_TEXT,\r\n    payload: email\r\n})\r\nexport const setPasswordText = password => ({\r\n    type: SIGNIN_CHANGE_PASSWORD_TEXT,\r\n    payload: password\r\n})","export const SIGNUP_CHANGE_EMAIL_TEXT = 'SIGNUP_CHANGE_EMAIL_TEXT';\r\nexport const SIGNUP_CHANGE_PASSWORD_TEXT = 'SIGNUP_CHANGE_PASSWORD_TEXT';\r\nexport const SIGNUP_CHANGE_REPEAT_PASSWORD_TEXT = 'SIGNUP_CHANGE_REPEAT_PASSWORD_TEXT';\r\nexport const SIGNUP_CHANGE_NICKNAME_TEXT = 'SIGNUP_CHANGE_NICKNAME_TEXT';\r\nexport const SIGNUP_CHANGE_DISABLED = 'SIGNUP_CHANGE_DISABLED';\r\n\r\n\r\nexport const setEmailText = email => ({\r\n    type: SIGNUP_CHANGE_EMAIL_TEXT,\r\n    payload: email\r\n})\r\nexport const setPasswordText = password => ({\r\n    type: SIGNUP_CHANGE_PASSWORD_TEXT,\r\n    payload: password\r\n})\r\nexport const setRepeatPasswordText = password => ({\r\n    type: SIGNUP_CHANGE_REPEAT_PASSWORD_TEXT,\r\n    payload: password\r\n})\r\nexport const setNicknameText = nickname => ({\r\n    type: SIGNUP_CHANGE_NICKNAME_TEXT,\r\n    payload: nickname\r\n})\r\nexport const setDisabledText = disabled => ({\r\n    type: SIGNUP_CHANGE_DISABLED,\r\n    payload: disabled\r\n})","export const ADD_TASKNAME_TEXT = 'ADD_TASKNAME_TEXT';\r\nexport const ADD_TASKDESCRIBE_TEXT = 'ADD_TASKDESCRIBE_TEXT';\r\nexport const ADD_SHARE_TO_TEXT = 'ADD_SHARE_TO_TEXT';\r\nexport const ADD_TASK_SHARE = 'ADD_TASK_SHARE';\r\nexport const ADD_TASK_DEADLINE_CHANGE_DATE = 'ADD_TASK_DEADLINE_CHANGE_DATE';\r\n\r\nexport const setTasknameText = taskname => ({\r\n    type: ADD_TASKNAME_TEXT,\r\n    payload: taskname\r\n})\r\nexport const setTaskdescribeText = taskdescribe => ({\r\n    type: ADD_TASKDESCRIBE_TEXT,\r\n    payload: taskdescribe\r\n})\r\nexport const setShareToText = shareTo => ({\r\n    type: ADD_SHARE_TO_TEXT,\r\n    payload: shareTo\r\n})\r\nexport const setDeadlineDate = deadline => ({\r\n    type: ADD_TASK_DEADLINE_CHANGE_DATE,\r\n    payload: deadline\r\n})\r\nexport const setTaskShare = share => ({\r\n    type: ADD_TASK_SHARE,\r\n    payload: share\r\n})\r\n","export const ADD_TASKNAME_TEXT = 'ADD_TASKNAME_TEXT';\r\nexport const ADD_TASKDESCRIBE_TEXT = 'ADD_TASKDESCRIBE_TEXT';\r\n\r\nexport const setTasknameText = taskname => ({\r\n    type: ADD_TASKNAME_TEXT,\r\n    payload: taskname\r\n})\r\nexport const setTaskdescribeText = taskdescribe => ({\r\n    type: ADD_TASKDESCRIBE_TEXT,\r\n    payload: taskdescribe\r\n})\r\n","import React, {Component} from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"home\">TaskManager</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"home\">Home</Nav.Link>\r\n                        <Nav.Link href=\"tasks\">My tasks</Nav.Link>\r\n                        <Nav.Link href=\"newTask\">Create new task</Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Nav>\r\n                        <Nav.Link href=\"SignIn\">SignIn</Nav.Link>\r\n                        <Nav.Link to={process.env.PUBLIC_URL + '/SignUp'}>SignUp</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {Button} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from \"../componentsStyle/Task.module.css\";\r\n\r\nclass ModalWindow extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: 0\r\n        }\r\n\r\n        this.onChangeTaskname = this.onChangeTaskname.bind(this);\r\n        this.onChangeTaskdescribe= this.onChangeTaskdescribe.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChangeTaskname(e) {\r\n        this.props.setTasknameText(e.target.value);\r\n    }\r\n    onChangeTaskdescribe(e) {\r\n        this.props.setTaskdescribeText(e.target.value);\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        //console.log(this.props.task.id, this.props)\r\n        let taskId = this.props.task.id;\r\n        let users =  JSON.parse(localStorage.getItem('users'));\r\n        let username = localStorage.getItem('CurrentUser');\r\n        let useremail = localStorage.getItem('CurrentUserEmail');\r\n        let user;\r\n        if(this.props.task.shareTo == ''){\r\n            console.log('no share');\r\n            for(user in users){ \r\n                console.log(users[user].name);\r\n                if(users[user].name == username){ \r\n                    //console.log(users[user].tasks, 'edit task: ',users[user].tasks[taskId])\r\n                    users[user].tasks[taskId].taskname = this.props.taskname;\r\n                    users[user].tasks[taskId].taskdescribe= this.props.taskdescribe;\r\n                }\r\n            }\r\n        } else {\r\n             for(user in users){ \r\n                //console.log(users[user].name);\r\n                if(users[user].email !== useremail){ \r\n                    //console.log(users[user].tasks, 'edit task: ',users[user].tasks[taskId])\r\n                    users[user].tasks[taskId].taskname = this.props.taskname;\r\n                    users[user].tasks[taskId].taskdescribe= this.props.taskdescribe;\r\n                }\r\n            }\r\n        }\r\n        localStorage.setItem('users', JSON.stringify(users))\r\n        //console.log('task edited');\r\n    }\r\n    render(){\r\n        return(\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Modal heading\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Centered Modal</h4>\r\n                    <Form onSubmit={this.onSubmit} className={s.new_task_block}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className={s.new_task_label}>Task name</Form.Label>\r\n                        <Form.Control \r\n                            name=\"taskname\" \r\n                            type=\"text\" \r\n                            defaultValue={this.props.task.taskname}\r\n                            placeholder=\"Enter short name of task\" \r\n                            onChange={this.onChangeTaskname} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className={s.new_task_label}>Task desscribe</Form.Label>\r\n                        <Form.Control \r\n                            className={s.describe_field} \r\n                            name=\"taskdescribe\" \r\n                            type=\"text\" \r\n                            defaultValue={this.props.task.taskdescribe}\r\n                            placeholder=\"Describe a task\" \r\n                            onChange={this.onChangeTaskdescribe} />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.props.refreshTasks}>\r\n                        Submit\r\n                    </Button>                    \r\n                    <Button variant=\"warning\" onClick={this.props.onHide}>Close</Button>\r\n\r\n                </Form>  \r\n                </Modal.Body>\r\n        </Modal>\r\n        )\r\n    }\r\n}\r\nexport default ModalWindow;","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {setTasknameText, setTaskdescribeText} from '../store/edittask/actions';\r\nimport ModalWindow from './ModalWindow';\r\n\r\nclass ModalWindowContainer extends Component {\r\n    render() { \r\n\r\n        return <ModalWindow\r\n            show={this.props.show} \r\n            onHide={this.props.onHide}\r\n            refreshTasks={this.props.refreshTasks}\r\n            task={this.props.task}\r\n            taskname={this.props.taskname} \r\n            taskdescribe={this.props.taskdescribe} \r\n            setTasknameText={this.props.setTasknameText} \r\n            setTaskdescribeText={this.props.setTaskdescribeText} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        taskname: state.edittask.taskname,\r\n        taskdescribe: state.edittask.taskdescribe,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setTasknameText,\r\n    setTaskdescribeText\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalWindowContainer);","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport {Button, ButtonToolbar} from \"react-bootstrap\";\r\nimport ModalWindowContainer from './ModalWindowContainer';\r\nimport s from \"../componentsStyle/Task.module.css\";\r\n\r\nclass Task extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskToEdit: '',\r\n            showModal: false,\r\n            users:'',\r\n            username: '',\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            shareItems: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let username = localStorage.getItem('CurrentUser');\r\n        let useremail = localStorage.getItem('CurrentUserEmail');\r\n        let user;      \r\n        let SharedTasks = [];\r\n\r\n        for(user in users){\r\n            if(users[user].name == username){\r\n                //console.log('Loged user info: ',users[user]);\r\n                let task;\r\n                let allTasks=[];\r\n                for(task in users[user].tasks){\r\n                    //console.log('Loged user task #', task, users[user].tasks[task]);\r\n                    allTasks.push(users[user].tasks[task]);\r\n                    localStorage.setItem('users', JSON.stringify(users))\r\n                }\r\n                this.setState({\r\n                    items: allTasks\r\n                }); \r\n            }\r\n            let task;\r\n            for(task in users[user].tasks){\r\n                if(users[user].tasks[task].shareTo == useremail){\r\n                    //console.log(users[user].name,' shared : task', users[user].tasks[task])\r\n                    SharedTasks.push(users[user].tasks[task]);                     \r\n                }  \r\n                this.setState({\r\n                    shareItems: SharedTasks\r\n                });              \r\n            }    \r\n        }\r\n        this.setState({isLoaded: true})\r\n        //console.log(this.state.shareItems)\r\n    }\r\n    deleteTask(x) {\r\n        console.log('deleted: ', x);\r\n        let taskId = x.id;       \r\n        this.setState({isLoaded: false})\r\n\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let username = localStorage.getItem('CurrentUser');\r\n        let user;\r\n       \r\n        for(user in users){\r\n            if(users[user].name == username){\r\n                users[user].tasks.splice(taskId, 1);\r\n                console.log(users[user].tasks);\r\n                let task;\r\n                let allTasks=[];\r\n                for(task in users[user].tasks){\r\n                    if(users[user].tasks[task].id >= taskId){\r\n                        console.log(users[user].tasks[task])\r\n                        users[user].tasks[task].id--; \r\n                    }\r\n                    allTasks.push(users[user].tasks[task]);\r\n                }\r\n                this.setState({\r\n                    items: allTasks\r\n                });\r\n            }\r\n        }\r\n        localStorage.setItem('users', JSON.stringify(users)); \r\n        setTimeout(() => this.setState({isLoaded: true}), 800);\r\n\r\n        //window.location.href = '/tasks';\r\n    }\r\n    render() {\r\n        const {error, isLoaded, items, shareItems} = this.state;\r\n        let hideModal = () => this.setState({showModal: false})\r\n        let refreshTasks = () => {\r\n            \r\n            setTimeout(() => {\r\n            //this.setState({isLoaded: false})\r\n            let users = JSON.parse(localStorage.getItem('users'));\r\n            let username = localStorage.getItem('CurrentUser');\r\n            let useremail = localStorage.getItem('CurrentUserEmail');\r\n            let user;      \r\n            let SharedTasks = [];\r\n    \r\n            for(user in users){\r\n                if(users[user].name == username){\r\n                    let task;\r\n                    let allTasks=[];\r\n                    for(task in users[user].tasks){\r\n                        allTasks.push(users[user].tasks[task]);\r\n                    }\r\n                    this.setState({\r\n                        items: allTasks\r\n                    }); \r\n                }\r\n                let task;\r\n                for(task in users[user].tasks){\r\n                    if(users[user].tasks[task].shareTo == useremail){\r\n                        SharedTasks.push(users[user].tasks[task]);                     \r\n                    }  \r\n                    this.setState({\r\n                        shareItems: SharedTasks\r\n                    });              \r\n                }    \r\n            }      \r\n            console.log('refreshed');\r\n            this.setState({showModal: false});\r\n        }, 500)}\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div className={s.lds_roller}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>;\r\n        } else {\r\n            return (\r\n                <Card>\r\n                    <div>\r\n                        <h1>My tasks</h1>\r\n                        {items.map(item => (\r\n                            <div className={s.task_block}  key={item.taskname}>      \r\n                                <Card className=\"text-center\"  key={item.taskname}>\r\n                                    <Card.Header>Shared to: <b>{item.shareTo}</b></Card.Header>\r\n                                    <Card.Body>\r\n                                        <Card.Title>{item.taskname}</Card.Title>\r\n                                        <Card.Text>\r\n                                            {item.taskdescribe}<br />\r\n                                        </Card.Text>\r\n                                        <ButtonToolbar>\r\n                                            <Button variant=\"primary\" onClick={() => this.setState({showModal: true, taskToEdit: item})}>Edit &#9998;</Button>\r\n                                            <Button align='right' variant=\"danger\" onClick={() => this.deleteTask(item)}>Delete &#xe020;</Button>\r\n                                        </ButtonToolbar>\r\n                                    </Card.Body>\r\n                                    <Card.Footer className=\"text-muted\"></Card.Footer>\r\n                                </Card>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <ModalWindowContainer \r\n                        show={this.state.showModal} \r\n                        onHide={hideModal} \r\n                        task={this.state.taskToEdit}\r\n                        refreshTasks={refreshTasks}\r\n                    />\r\n\r\n                    <br />\r\n                    <div className={s.card_blok}>\r\n                        <h1>Tasks shared to me</h1>\r\n                        <hr />\r\n                        {shareItems.map(item => (\r\n                            <div className={s.task_block}  key={item.taskname}>      \r\n                                <Card className=\"text-center\">\r\n                                    <Card.Header>Shared from: <b>{item.shareTo}</b></Card.Header>\r\n                                    <Card.Body>\r\n                                        <Card.Title>{item.taskname}</Card.Title>\r\n                                        <Card.Text>\r\n                                            {item.taskdescribe}<br />\r\n                                        </Card.Text>\r\n                                        <Button variant=\"primary\" onClick={() => this.setState({showModal: true, taskToEdit: item})}>Edit</Button>\r\n                                    </Card.Body>\r\n                                    <Card.Footer className=\"text-muted\"></Card.Footer>\r\n                                </Card>\r\n                            </div>\r\n                        ))}\r\n                     </div>\r\n                </Card>\r\n            );\r\n        }\r\n    }   \r\n}\r\nexport default Task;","import React, {Component} from \"react\";\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from \"../componentsStyle/Home.module.css\";\r\n\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: '',\r\n            username: '',\r\n            numerOfUserTasks: 0,\r\n            numerOfsharedTasks: 0\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let useremail = localStorage.getItem('CurrentUserEmail'); \r\n        this.state.username = localStorage.getItem('CurrentUser');\r\n        let user;\r\n        let task;\r\n      \r\n        for(user in users){\r\n            if(users[user].name ==this.state.username){\r\n               this.state.numerOfUserTasks = users[user].tasks.length;\r\n            }\r\n            for(task in users[user].tasks){\r\n                if(users[user].tasks[task].shareTo == useremail){\r\n                    this.state.numerOfsharedTasks++;\r\n                    console.log(this.state.numerOfsharedTasks)\r\n                }               \r\n            } \r\n        }\r\n        \r\n        this.setState({loaded: true})\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Hello <b>{this.state.username}</b>! </h1>\r\n                <h4>Check your tasks or create the new one by using header menu</h4>\r\n\r\n                <div className={s.tasks_info_block} align='center'>\r\n                    <h2 className={s.tasks_info_left}>For now you have:</h2>\r\n                    <div className={s.tasks_info_right}>\r\n                        <h3>Your tasks: <Badge variant=\"success\">{this.state.numerOfUserTasks}</Badge></h3>\r\n                        <h3>Shared to you tasks: <Badge variant=\"warning\">{this.state.numerOfsharedTasks}</Badge></h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React, {Component} from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from \"../componentsStyle/Task.module.css\";\r\n\r\n\r\nclass AddTask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            id: 0,\r\n            taskadded: false\r\n        }\r\n        this.onChangeTaskname = this.onChangeTaskname.bind(this);\r\n        this.onChangeTaskdescribe= this.onChangeTaskdescribe.bind(this);\r\n        this.onChangeSharename = this.onChangeSharename.bind(this);\r\n        this.onChangeShare = this.onChangeShare.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChangeTaskname(e) {\r\n       this.props.setTasknameText(e.target.value);\r\n    }\r\n    onChangeTaskdescribe(e) {\r\n        this.props.setTaskdescribeText(e.target.value);\r\n    }\r\n    onChangeSharename(e) {\r\n        this.props.setShareToText(e.target.value);\r\n     }\r\n    onChangeShare(e){\r\n        this.props.setTaskShare(e.target.value);\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        let users =  JSON.parse(localStorage.getItem('users'));\r\n        let username = localStorage.getItem('CurrentUser');\r\n        console.log(username, users);\r\n        for(user in users){ \r\n            console.log(users[user].name);\r\n            if(users[user].name == username){\r\n                this.state.id = users[user].tasks.length;\r\n            }\r\n        }\r\n        let user;\r\n        let newTask = {\r\n            id: this.state.id,\r\n            taskname: this.props.taskname, \r\n            taskdescribe: this.props.taskdescribe,\r\n            shareTo: this.props.shareTo,\r\n        }\r\n        for(user in users){ \r\n            console.log(users[user].name);\r\n            if(users[user].name == username){\r\n                let tasksNum = users[user].tasks.length;      \r\n                this.setState({id: tasksNum + 1});\r\n                users[user].tasks.push(newTask);\r\n                console.log('task added to tasks');\r\n            }\r\n        }\r\n        localStorage.setItem('users', JSON.stringify(users))\r\n        \r\n        this.setState({taskadded: true})\r\n        setTimeout(() => this.setState({taskadded: false}), 1500);\r\n    }\r\n    render() {\r\n        //message that shows you add task\r\n        let taskadded;\r\n        if(this.state.taskadded == true){\r\n            taskadded = <Alert variant='success'><b>Task added</b></Alert> \r\n        }\r\n        if(this.state.taskadded == false){\r\n            taskadded = <div></div>\r\n        }\r\n        //block for input to share task to other user\r\n        let shareblock;\r\n        if(this.props.share === 'true'){\r\n            shareblock = <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label className={s.new_task_label}>Add email of user yo want to share a task</Form.Label>\r\n            <Form.Control \r\n                name=\"shareTo\" \r\n                type=\"text\" \r\n                placeholder=\"Enter email to share\" \r\n                onChange={this.onChangeSharename} />\r\n         </Form.Group>\r\n        }\r\n        else{\r\n            shareblock = <div></div>\r\n        }\r\n            return (\r\n                <div>\r\n                    {taskadded}\r\n                    <Form onSubmit={this.onSubmit} className={s.new_task_block}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className={s.new_task_label}>Task name</Form.Label>\r\n                        <Form.Control \r\n                            name=\"taskname\" \r\n                            type=\"text\" \r\n                            placeholder=\"Enter short name of task\" \r\n                            value={this.props.taskname}\r\n                            onChange={this.onChangeTaskname} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className={s.new_task_label}>Task describe</Form.Label>\r\n                        <Form.Control \r\n                            className={s.describe_field} \r\n                            name=\"taskdescribe\" \r\n                            type=\"text\" \r\n                            placeholder=\"Describe a task\" \r\n                            value={this.props.taskdescribe}\r\n                            onChange={this.onChangeTaskdescribe} />\r\n                    </Form.Group>\r\n                    \r\n                    <fieldset>\r\n                    <Form.Group as={Row}>\r\n                    <Col sm={10}>\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"task for me only\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios1\"\r\n                        value='false'\r\n                        name=\"share\"\r\n                        onChange={this.onChangeShare}\r\n                        />\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"share task\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios2\"\r\n                        value='true'\r\n                        name=\"share\"\r\n                        onChange={this.onChangeShare}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    </fieldset>\r\n                    {shareblock}\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.props.disabled}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>  \r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nexport default AddTask;\r\n","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {setTasknameText, setTaskdescribeText, setShareToText, setTaskShare} from '../store/addtask/actions';\r\nimport AddTask from './AddTask';\r\n\r\n\r\nclass AddTaskContainer extends Component {\r\n    render() { \r\n        return <AddTask\r\n            email={this.props.email} \r\n            taskname={this.props.taskname} \r\n            taskdescribe={this.props.taskdescribe} \r\n            share={this.props.share}\r\n            shareTo={this.props.shareTo} \r\n            setShareToText={this.props.setShareToText}\r\n            setTaskShare={this.props.setTaskShare}\r\n            setTasknameText={this.props.setTasknameText} \r\n            setTaskdescribeText={this.props.setTaskdescribeText} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        email: state.signin.email,\r\n        taskname: state.addtask.taskname,\r\n        taskdescribe: state.addtask.taskdescribe,\r\n        share: state.addtask.share,\r\n        shareTo: state.addtask.shareTo\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setTasknameText,\r\n    setTaskdescribeText,\r\n    setShareToText,\r\n    setTaskShare\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskContainer);\r\n","import React, {Component} from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport s from '../componentsStyle/Header.module.css';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: null\r\n        }\r\n        \r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onEmailChange = this.onEmailChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n    }\r\n    onEmailChange(e) {\r\n        this.props.setEmailText(e.target.value)\r\n    }\r\n    onPasswordChange(e) {\r\n        this.props.setPasswordText(e.target.value)\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let user;\r\n        console.log('signining');\r\n        for(user in users){     \r\n            let userName;\r\n            let userEmail\r\n            if(users[user].email == this.props.email && users[user].password == this.props.password){\r\n                userName = users[user].name;\r\n                userEmail = users[user].email;\r\n                localStorage.setItem('CurrentUser', userName);\r\n                localStorage.setItem('CurrentUserEmail', userEmail);\r\n                this.setState({login: true});\r\n                window.location.href = '/home';\r\n            } else{\r\n                console.log('wrong email or password')\r\n                this.setState({\r\n                    login: null\r\n                })\r\n            }\r\n        }\r\n    }\r\n    render() {     \r\n        let faillogin;\r\n        if(this.state.login == false){\r\n            faillogin = <Alert variant='danger'> Wrong email or passwor</Alert> \r\n        }\r\n        if(this.state.login == true){\r\n            faillogin = <div></div>\r\n        }\r\n        return ( \r\n            <div className={s.form_sign_in}> \r\n            <br />\r\n            {faillogin}\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            placeholder=\"Enter email\" \r\n                            onChange={this.onEmailChange}\r\n                            value={this.props.email} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.props.password} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Sign in\r\n                    </Button>\r\n                </Form>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {setEmailText, setPasswordText} from '../store/signin/actions';\r\nimport SignIn from './SignIn';\r\n\r\nclass SignInContainer extends Component {\r\n    render() { \r\n        return <SignIn \r\n            email={this.props.email} \r\n            password={this.props.password}\r\n            setEmailText={this.props.setEmailText} \r\n            setPasswordText={this.props.setPasswordText} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        email: state.signin.email,\r\n        password: state.signin.password\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps =  {\r\n    setEmailText,\r\n    setPasswordText\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInContainer);","import React, {Component} from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from \"../componentsStyle/Header.module.css\";\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            passCheck: null\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onNicknameChange = this.onNicknameChange.bind(this);\r\n        this.onEmailChange = this.onEmailChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.onRepeatPasswordChange = this.onRepeatPasswordChange.bind(this);\r\n    }\r\n    onNicknameChange(e) {\r\n        this.props.setNicknameText(e.target.value)\r\n    }\r\n    onEmailChange(e) {\r\n        this.props.setEmailText(e.target.value)\r\n    }\r\n    onPasswordChange(e) {\r\n        this.props.setPasswordText(e.target.value)\r\n        if(e.target.value === this.props.repeatPassword) {\r\n            this.props.setDisabledText('');\r\n        }\r\n        else {\r\n            this.props.setDisabledText('disabled');\r\n        }\r\n    }\r\n    onRepeatPasswordChange(e) {\r\n        this.props.setRepeatPasswordText(e.target.value);\r\n        if(e.target.value === this.props.password) {\r\n            this.props.setDisabledText('');\r\n            this.setState({\r\n                passCheck: true\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                passCheck: false\r\n            })\r\n            console.log('not ok');\r\n            this.props.setDisabledText('disabled');\r\n        }\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault(); \r\n        console.log('saved');\r\n        let newUser = {name: this.props.nickname, email: this.props.email, password: this.props.password, tasks: []};\r\n        let firstUser = [newUser];\r\n        console.log(localStorage.getItem('users'));\r\n        if(!localStorage.getItem('users')) {\r\n            console.log('empty');\r\n            localStorage.setItem('users', JSON.stringify(firstUser));\r\n        } else{\r\n            console.log('adding user');\r\n            let users = JSON.parse(localStorage.getItem('users'));\r\n            users.push(newUser);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n        }\r\n        window.location.href = '/SignIn';\r\n    }\r\n    render() {\r\n        let passCheck;\r\n        if(this.state.passCheck == false){\r\n            passCheck = <Alert variant='danger'>password do not match</Alert> \r\n        }\r\n        if(this.state.login == true){\r\n            passCheck = <div></div>\r\n        }\r\n        return (\r\n            <div className={s.form_sign_in}>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Nickname</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            name=\"nickname\" \r\n                            placeholder=\"Enter nickname\" \r\n                            value={this.props.nickname}\r\n                            onChange={this.onNicknameChange}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            name=\"email\" \r\n                            placeholder=\"Enter email\" \r\n                            value={this.props.email}\r\n                            onChange={this.onEmailChange}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Enter password</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            placeholder=\"Password\" \r\n                            value={this.props.password}\r\n                            onChange={this.onPasswordChange} />\r\n                    </Form.Group>\r\n\r\n                    {passCheck}\r\n\r\n                    <Form.Group controlId=\"confirmFormBasicPassword\">\r\n                        <Form.Label>Confirm your password</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            placeholder=\"Repeat password\" \r\n                            value={this.props.repeatPassword}\r\n                            onChange={this.onRepeatPasswordChange}\r\n                            />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" name=\"submitbutton\" type=\"submit\" disabled={this.props.disabled}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SignUp;","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {setEmailText, setPasswordText, setRepeatPasswordText, setDisabledText, setNicknameText} from '../store/signup/actions';\r\nimport SignUp from './SignUp';\r\n\r\nclass SignUpContainer extends Component {\r\n    render() { \r\n        return <SignUp \r\n            email={this.props.email} \r\n            password={this.props.password} \r\n            repeatPassword={this.props.repeatPassword}\r\n            nickname={this.props.nickname} \r\n            disabled = {this.props.disabled}\r\n            \r\n            setDisabledText = {this.props.setDisabledText}\r\n            setEmailText={this.props.setEmailText} \r\n            setPasswordText={this.props.setPasswordText}\r\n            setRepeatPasswordText={this.props.setRepeatPasswordText}\r\n            setNicknameText={this.props.setNicknameText} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        email: state.signup.email,\r\n        password: state.signup.password,\r\n        repeatPassword: state.signup.repeatPassword,\r\n        nickname: state.signup.nickname,\r\n        disabled: state.signup.disabled\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps =  {\r\n    setEmailText,\r\n    setPasswordText,\r\n    setRepeatPasswordText,\r\n    setNicknameText,\r\n    setDisabledText\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpContainer);","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport allRedusers from './store/reducer';\r\nimport Header from './components/Header';\r\nimport Task from './components/Task';\r\nimport Home from './components/Home'\r\nimport AddTaskContainer from './components/AddTaskContainer';\r\nimport SignInContainer from './components/SignInContainer';\r\nimport SignUpContainer from './components/SignUpContainer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst store = createStore(\r\n    allRedusers,\r\n    {},\r\n    );\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <BrowserRouter basename={process.env.PUBLIC_URL + '/'}>\r\n                    <div className=\"App\" align='center'>\r\n                        <Route path='/' component={Header}/>\r\n\r\n                        <Route exact path='/' component={SignInContainer}/>\r\n\r\n                        <Route exact path={process.env.PUBLIC_URL + '/tasks'} component={Task}/>\r\n\r\n                        <Route exact path={process.env.PUBLIC_URL + '/home'} component={Home}/>\r\n\r\n                        <Route exact path={process.env.PUBLIC_URL + '/newTask'} component={AddTaskContainer}/>\r\n\r\n                        <Route path={process.env.PUBLIC_URL + '/SignUp'} component={SignUpContainer}/>\r\n\r\n                        <Route path={process.env.PUBLIC_URL + '/SignIn'} component={SignInContainer}/>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task_block\":\"Task_task_block__28CuS\",\"new_task_block\":\"Task_new_task_block__2JVOd\",\"new_task_label\":\"Task_new_task_label__2HMW7\",\"describe_field\":\"Task_describe_field__38xFW\",\"lds_roller\":\"Task_lds_roller__2Pirh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_sign_in\":\"Header_form_sign_in__lcRBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks_info_block\":\"Home_tasks_info_block__2WQ5x\",\"tasks_info_right\":\"Home_tasks_info_right__2DycT\",\"tasks_info_left\":\"Home_tasks_info_left__3Uu4_\"};"],"sourceRoot":""}