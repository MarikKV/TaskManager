{"version":3,"sources":["store/signin/reducer.js","store/signup/reducer.js","store/addtask/reducer.js","store/edittask/reducer.js","store/reducer.js","store/signin/actions.js","store/signup/actions.js","store/addtask/actions.js","store/edittask/actions.js","components/Header.js","components/ModalWindow.js","components/ModalWindowContainer.js","components/Task.js","components/Home.js","components/AddTask.js","components/AddTaskContainer.js","components/SignIn.js","components/SignInContainer.js","components/SignUp.js","components/SignUpContainer.js","App.js","serviceWorker.js","index.js","componentsStyle/Task.module.css","componentsStyle/Header.module.css","componentsStyle/Home.module.css"],"names":["defaultState","email","password","repeatPassword","nickname","disabled","taskname","taskdescribe","shareTo","share","deadline","logedIn","combineReducers","signin","state","arguments","length","undefined","action","type","Object","objectSpread","payload","signup","addtask","edittask","Header","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","react_router_dom","to","Component","Modal","ModalWindowContainer","components_ModalWindow","show","this","props","onHide","refreshTasks","task","setTasknameText","setTaskdescribeText","mapDispatchToProps","connect","Task","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","taskToEdit","showModal","users","username","error","isLoaded","items","shareItems","user","JSON","parse","localStorage","getItem","useremail","SharedTasks","name","allTasks","tasks","push","setItem","stringify","setState","x","_this2","console","log","taskId","splice","setTimeout","_this3","_this$state","message","Card","map","item","s","task_block","key","Body","Title","Text","ButtonToolbar","Button","onClick","align","deleteTask","Footer","components_ModalWindowContainer","card_blok","lds_roller","React","Home","loaded","numerOfUserTasks","numerOfsharedTasks","tasks_info_block","tasks_info_left","tasks_info_right","Badge","AddTask","taskadded","onChangeTaskname","bind","assertThisInitialized","onChangeTaskdescribe","onChangeSharename","onChangeShare","onSubmit","e","target","value","setShareToText","setTaskShare","preventDefault","newTask","tasksNum","_React$createElement","_React$createElement2","shareblock","Alert","Form","Group","controlId","Label","new_task_label","Control","placeholder","onChange","new_task_block","describe_field","as","Row","Col","sm","Check","label","defineProperty","AddTaskContainer","components_AddTask","SignIn","login","onEmailChange","onPasswordChange","setEmailText","setPasswordText","userName","userEmail","window","location","faillogin","form_sign_in","SignInContainer","components_SignIn","SignUp","context","passCheck","onNicknameChange","onRepeatPasswordChange","setNicknameText","setDisabledText","setRepeatPasswordText","newUser","firstUser","SignUpContainer","components_SignUp","store","createStore","allRedusers","App","es","basename","react_router","path","component","exact","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.827be1a1.chunk.js","sourcesContent":["import {SIGNIN_CHANGE_EMAIL_TEXT, SIGNIN_CHANGE_PASSWORD_TEXT} from \"./actions\";\r\n\r\nconst defaultState = {\r\n  email: '',\r\n  password: ''\r\n};\r\n\r\nexport const signinReduser = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SIGNIN_CHANGE_EMAIL_TEXT: \r\n      return {\r\n        ...state,\r\n        email: action.payload\r\n      }\r\n    case SIGNIN_CHANGE_PASSWORD_TEXT: \r\n      return {\r\n        ...state,\r\n        password: action.payload\r\n      }\r\n  }\r\n  return state;\r\n}\r\n\r\n","import {\r\n     SIGNUP_CHANGE_EMAIL_TEXT,\r\n     SIGNUP_CHANGE_PASSWORD_TEXT, \r\n     SIGNUP_CHANGE_REPEAT_PASSWORD_TEXT, \r\n     SIGNUP_CHANGE_NICKNAME_TEXT, \r\n     SIGNUP_CHANGE_DISABLED} from \"./actions\"\r\n\r\nconst defaultState = {\r\n  email: '',\r\n  password: '',\r\n  repeatPassword: '',\r\n  nickname: '',\r\n  disabled: 'disabled'\r\n};\r\n\r\nexport const signupReduser = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SIGNUP_CHANGE_EMAIL_TEXT: \r\n      return {\r\n        ...state,\r\n        email: action.payload\r\n      }\r\n    case SIGNUP_CHANGE_PASSWORD_TEXT: \r\n      return {\r\n        ...state,\r\n        password: action.payload\r\n      }\r\n    case SIGNUP_CHANGE_REPEAT_PASSWORD_TEXT: \r\n      return {\r\n        ...state,\r\n        repeatPassword: action.payload\r\n      }\r\n    case SIGNUP_CHANGE_NICKNAME_TEXT: \r\n    return {\r\n      ...state,\r\n      nickname: action.payload\r\n    }\r\n    case SIGNUP_CHANGE_DISABLED: \r\n    return {\r\n      ...state,\r\n      disabled: action.payload\r\n    }\r\n  } \r\n  return state;\r\n}\r\n","import {\r\n    ADD_TASKNAME_TEXT,\r\n    ADD_TASKDESCRIBE_TEXT, \r\n    ADD_SHARE_TO_TEXT,\r\n    ADD_TASK_SHARE,\r\n    ADD_TASK_DEADLINE_CHANGE_DATE} from \"./actions\"\r\n\r\nconst defaultState = {\r\n  taskname: '',\r\n  taskdescribe: '',\r\n  shareTo: '',\r\n  share: 'false',\r\n  deadline: '',\r\n  logedIn: ''\r\n};\r\n\r\nexport const addTaskReduser = (state = defaultState, action) => {\r\n switch (action.type) {\r\n   case ADD_TASKNAME_TEXT: \r\n     return {\r\n       ...state,\r\n       taskname: action.payload\r\n     }\r\n   case ADD_TASKDESCRIBE_TEXT: \r\n     return {\r\n       ...state,\r\n       taskdescribe: action.payload\r\n     }\r\n    case ADD_SHARE_TO_TEXT: \r\n     return {\r\n       ...state,\r\n       shareTo: action.payload\r\n     }\r\n    case ADD_TASK_DEADLINE_CHANGE_DATE: \r\n    return {\r\n     ...state,\r\n     deadline: action.payload\r\n   }\r\n   case ADD_TASK_SHARE: \r\n    return {\r\n     ...state,\r\n     share: action.payload\r\n   }\r\n }\r\n return state;\r\n}\r\n\r\n","import {\r\n    ADD_TASKNAME_TEXT,\r\n    ADD_TASKDESCRIBE_TEXT\r\n   } from \"./actions\"\r\n\r\nconst defaultState = {\r\n  taskname: '',\r\n  taskdescribe: ''\r\n};\r\n\r\nexport const editTaskReduser = (state = defaultState, action) => {\r\n switch (action.type) {\r\n   case ADD_TASKNAME_TEXT: \r\n     return {\r\n       ...state,\r\n       taskname: action.payload\r\n     }\r\n   case ADD_TASKDESCRIBE_TEXT: \r\n     return {\r\n       ...state,\r\n       taskdescribe: action.payload\r\n     }\r\n }\r\n return state;\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { signinReduser } from \"./signin/reducer\";\r\nimport { signupReduser } from \"./signup/reducer\";\r\nimport { addTaskReduser } from \"./addtask/reducer\";\r\nimport { editTaskReduser } from \"./edittask/reducer\";\r\n\r\n\r\nexport default combineReducers({\r\n  signin: signinReduser,\r\n  signup: signupReduser,\r\n  addtask: addTaskReduser,\r\n  edittask: editTaskReduser\r\n})\r\n\r\n","export const SIGNIN_CHANGE_EMAIL_TEXT = 'SIGNIN_CHANGE_EMAIL_TEXT';\r\nexport const SIGNIN_CHANGE_PASSWORD_TEXT = 'SIGNIN_CHANGE_PASSWORD_TEXT';\r\n\r\n\r\nexport const setEmailText = email => ({\r\n    type: SIGNIN_CHANGE_EMAIL_TEXT,\r\n    payload: email\r\n})\r\nexport const setPasswordText = password => ({\r\n    type: SIGNIN_CHANGE_PASSWORD_TEXT,\r\n    payload: password\r\n})","export const SIGNUP_CHANGE_EMAIL_TEXT = 'SIGNUP_CHANGE_EMAIL_TEXT';\r\nexport const SIGNUP_CHANGE_PASSWORD_TEXT = 'SIGNUP_CHANGE_PASSWORD_TEXT';\r\nexport const SIGNUP_CHANGE_REPEAT_PASSWORD_TEXT = 'SIGNUP_CHANGE_REPEAT_PASSWORD_TEXT';\r\nexport const SIGNUP_CHANGE_NICKNAME_TEXT = 'SIGNUP_CHANGE_NICKNAME_TEXT';\r\nexport const SIGNUP_CHANGE_DISABLED = 'SIGNUP_CHANGE_DISABLED';\r\n\r\n\r\nexport const setEmailText = email => ({\r\n    type: SIGNUP_CHANGE_EMAIL_TEXT,\r\n    payload: email\r\n})\r\nexport const setPasswordText = password => ({\r\n    type: SIGNUP_CHANGE_PASSWORD_TEXT,\r\n    payload: password\r\n})\r\nexport const setRepeatPasswordText = password => ({\r\n    type: SIGNUP_CHANGE_REPEAT_PASSWORD_TEXT,\r\n    payload: password\r\n})\r\nexport const setNicknameText = nickname => ({\r\n    type: SIGNUP_CHANGE_NICKNAME_TEXT,\r\n    payload: nickname\r\n})\r\nexport const setDisabledText = disabled => ({\r\n    type: SIGNUP_CHANGE_DISABLED,\r\n    payload: disabled\r\n})","export const ADD_TASKNAME_TEXT = 'ADD_TASKNAME_TEXT';\r\nexport const ADD_TASKDESCRIBE_TEXT = 'ADD_TASKDESCRIBE_TEXT';\r\nexport const ADD_SHARE_TO_TEXT = 'ADD_SHARE_TO_TEXT';\r\nexport const ADD_TASK_SHARE = 'ADD_TASK_SHARE';\r\nexport const ADD_TASK_DEADLINE_CHANGE_DATE = 'ADD_TASK_DEADLINE_CHANGE_DATE';\r\n\r\nexport const setTasknameText = taskname => ({\r\n    type: ADD_TASKNAME_TEXT,\r\n    payload: taskname\r\n})\r\nexport const setTaskdescribeText = taskdescribe => ({\r\n    type: ADD_TASKDESCRIBE_TEXT,\r\n    payload: taskdescribe\r\n})\r\nexport const setShareToText = shareTo => ({\r\n    type: ADD_SHARE_TO_TEXT,\r\n    payload: shareTo\r\n})\r\nexport const setDeadlineDate = deadline => ({\r\n    type: ADD_TASK_DEADLINE_CHANGE_DATE,\r\n    payload: deadline\r\n})\r\nexport const setTaskShare = share => ({\r\n    type: ADD_TASK_SHARE,\r\n    payload: share\r\n})\r\n","export const ADD_TASKNAME_TEXT = 'ADD_TASKNAME_TEXT';\r\nexport const ADD_TASKDESCRIBE_TEXT = 'ADD_TASKDESCRIBE_TEXT';\r\n\r\nexport const setTasknameText = taskname => ({\r\n    type: ADD_TASKNAME_TEXT,\r\n    payload: taskname\r\n})\r\nexport const setTaskdescribeText = taskdescribe => ({\r\n    type: ADD_TASKDESCRIBE_TEXT,\r\n    payload: taskdescribe\r\n})\r\n","import React, {Component} from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { Link } from \"react-router-dom\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"home\">TaskManager2</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Link to=\"/home\">Home</Link>\r\n                        <Link to=\"/tasks\">My tasks</Link>\r\n                        <Link to=\"/newTask\">Create new task</Link>\r\n                    </Nav>\r\n\r\n                    <Nav>\r\n                        <Link to=\"/SignIn\">SignIn</Link>\r\n                        <Link to=\"/SignUp\">SignUp</Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {Button} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from \"../componentsStyle/Task.module.css\";\r\n\r\nclass ModalWindow extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: 0\r\n        }\r\n\r\n        this.onChangeTaskname = this.onChangeTaskname.bind(this);\r\n        this.onChangeTaskdescribe= this.onChangeTaskdescribe.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChangeTaskname(e) {\r\n        this.props.setTasknameText(e.target.value);\r\n    }\r\n    onChangeTaskdescribe(e) {\r\n        this.props.setTaskdescribeText(e.target.value);\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        //console.log(this.props.task.id, this.props)\r\n        let taskId = this.props.task.id;\r\n        let users =  JSON.parse(localStorage.getItem('users'));\r\n        let username = localStorage.getItem('CurrentUser');\r\n        let useremail = localStorage.getItem('CurrentUserEmail');\r\n        let user;\r\n        if(this.props.task.shareTo == ''){\r\n            console.log('no share');\r\n            for(user in users){ \r\n                console.log(users[user].name);\r\n                if(users[user].name == username){ \r\n                    //console.log(users[user].tasks, 'edit task: ',users[user].tasks[taskId])\r\n                    users[user].tasks[taskId].taskname = this.props.taskname;\r\n                    users[user].tasks[taskId].taskdescribe= this.props.taskdescribe;\r\n                }\r\n            }\r\n        } else {\r\n             for(user in users){ \r\n                //console.log(users[user].name);\r\n                if(users[user].email !== useremail){ \r\n                    //console.log(users[user].tasks, 'edit task: ',users[user].tasks[taskId])\r\n                    users[user].tasks[taskId].taskname = this.props.taskname;\r\n                    users[user].tasks[taskId].taskdescribe= this.props.taskdescribe;\r\n                }\r\n            }\r\n        }\r\n        localStorage.setItem('users', JSON.stringify(users))\r\n        //console.log('task edited');\r\n    }\r\n    render(){\r\n        return(\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Modal heading\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Centered Modal</h4>\r\n                    <Form onSubmit={this.onSubmit} className={s.new_task_block}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className={s.new_task_label}>Task name</Form.Label>\r\n                        <Form.Control \r\n                            name=\"taskname\" \r\n                            type=\"text\" \r\n                            defaultValue={this.props.task.taskname}\r\n                            placeholder=\"Enter short name of task\" \r\n                            onChange={this.onChangeTaskname} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className={s.new_task_label}>Task desscribe</Form.Label>\r\n                        <Form.Control \r\n                            className={s.describe_field} \r\n                            name=\"taskdescribe\" \r\n                            type=\"text\" \r\n                            defaultValue={this.props.task.taskdescribe}\r\n                            placeholder=\"Describe a task\" \r\n                            onChange={this.onChangeTaskdescribe} />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.props.refreshTasks}>\r\n                        Submit\r\n                    </Button>                    \r\n                    <Button variant=\"warning\" onClick={this.props.onHide}>Close</Button>\r\n\r\n                </Form>  \r\n                </Modal.Body>\r\n        </Modal>\r\n        )\r\n    }\r\n}\r\nexport default Modal;","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {setTasknameText, setTaskdescribeText} from '../store/edittask/actions';\r\nimport ModalWindow from './ModalWindow';\r\n\r\nclass ModalWindowContainer extends Component {\r\n    render() { \r\n\r\n        return <ModalWindow\r\n            show={this.props.show} \r\n            onHide={this.props.onHide}\r\n            refreshTasks={this.props.refreshTasks}\r\n            task={this.props.task}\r\n            taskname={this.props.taskname} \r\n            taskdescribe={this.props.taskdescribe} \r\n            setTasknameText={this.props.setTasknameText} \r\n            setTaskdescribeText={this.props.setTaskdescribeText} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        taskname: state.edittask.taskname,\r\n        taskdescribe: state.edittask.taskdescribe,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setTasknameText,\r\n    setTaskdescribeText\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalWindowContainer);","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport {Button, ButtonToolbar} from \"react-bootstrap\";\r\nimport ModalWindowContainer from './ModalWindowContainer';\r\nimport s from \"../componentsStyle/Task.module.css\";\r\n\r\nclass Task extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskToEdit: '',\r\n            showModal: false,\r\n            users:'',\r\n            username: '',\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            shareItems: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let username = localStorage.getItem('CurrentUser');\r\n        let useremail = localStorage.getItem('CurrentUserEmail');\r\n        let user;      \r\n        let SharedTasks = [];\r\n\r\n        for(user in users){\r\n            if(users[user].name == username){\r\n                //console.log('Loged user info: ',users[user]);\r\n                let task;\r\n                let allTasks=[];\r\n                for(task in users[user].tasks){\r\n                    //console.log('Loged user task #', task, users[user].tasks[task]);\r\n                    allTasks.push(users[user].tasks[task]);\r\n                    localStorage.setItem('users', JSON.stringify(users))\r\n                }\r\n                this.setState({\r\n                    items: allTasks\r\n                }); \r\n            }\r\n            let task;\r\n            for(task in users[user].tasks){\r\n                if(users[user].tasks[task].shareTo == useremail){\r\n                    //console.log(users[user].name,' shared : task', users[user].tasks[task])\r\n                    SharedTasks.push(users[user].tasks[task]);                     \r\n                }  \r\n                this.setState({\r\n                    shareItems: SharedTasks\r\n                });              \r\n            }    \r\n        }\r\n        this.setState({isLoaded: true})\r\n        //console.log(this.state.shareItems)\r\n    }\r\n    deleteTask(x) {\r\n        console.log('deleted: ', x);\r\n        let taskId = x.id;       \r\n        this.setState({isLoaded: false})\r\n\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let username = localStorage.getItem('CurrentUser');\r\n        let user;\r\n       \r\n        for(user in users){\r\n            if(users[user].name == username){\r\n                users[user].tasks.splice(taskId, 1);\r\n                console.log(users[user].tasks);\r\n                let task;\r\n                let allTasks=[];\r\n                for(task in users[user].tasks){\r\n                    if(users[user].tasks[task].id >= taskId){\r\n                        console.log(users[user].tasks[task])\r\n                        users[user].tasks[task].id--; \r\n                    }\r\n                    allTasks.push(users[user].tasks[task]);\r\n                }\r\n                this.setState({\r\n                    items: allTasks\r\n                });\r\n            }\r\n        }\r\n        localStorage.setItem('users', JSON.stringify(users)); \r\n        setTimeout(() => this.setState({isLoaded: true}), 800);\r\n\r\n        //window.location.href = '/tasks';\r\n    }\r\n    render() {\r\n        const {error, isLoaded, items, shareItems} = this.state;\r\n        let hideModal = () => this.setState({showModal: false})\r\n        let refreshTasks = () => {\r\n            \r\n            setTimeout(() => {\r\n            //this.setState({isLoaded: false})\r\n            let users = JSON.parse(localStorage.getItem('users'));\r\n            let username = localStorage.getItem('CurrentUser');\r\n            let useremail = localStorage.getItem('CurrentUserEmail');\r\n            let user;      \r\n            let SharedTasks = [];\r\n    \r\n            for(user in users){\r\n                if(users[user].name == username){\r\n                    let task;\r\n                    let allTasks=[];\r\n                    for(task in users[user].tasks){\r\n                        allTasks.push(users[user].tasks[task]);\r\n                    }\r\n                    this.setState({\r\n                        items: allTasks\r\n                    }); \r\n                }\r\n                let task;\r\n                for(task in users[user].tasks){\r\n                    if(users[user].tasks[task].shareTo == useremail){\r\n                        SharedTasks.push(users[user].tasks[task]);                     \r\n                    }  \r\n                    this.setState({\r\n                        shareItems: SharedTasks\r\n                    });              \r\n                }    \r\n            }      \r\n            console.log('refreshed');\r\n            this.setState({showModal: false});\r\n        }, 500)}\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div className={s.lds_roller}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>;\r\n        } else {\r\n            return (\r\n                <Card>\r\n                    <div>\r\n                        <h1>My tasks</h1>\r\n                        {items.map(item => (\r\n                            <div className={s.task_block}  key={item.taskname}>      \r\n                                <Card className=\"text-center\"  key={item.taskname}>\r\n                                    <Card.Header>Shared to: <b>{item.shareTo}</b></Card.Header>\r\n                                    <Card.Body>\r\n                                        <Card.Title>{item.taskname}</Card.Title>\r\n                                        <Card.Text>\r\n                                            {item.taskdescribe}<br />\r\n                                        </Card.Text>\r\n                                        <ButtonToolbar>\r\n                                            <Button variant=\"primary\" onClick={() => this.setState({showModal: true, taskToEdit: item})}>Edit &#9998;</Button>\r\n                                            <Button align='right' variant=\"danger\" onClick={() => this.deleteTask(item)}>Delete &#xe020;</Button>\r\n                                        </ButtonToolbar>\r\n                                    </Card.Body>\r\n                                    <Card.Footer className=\"text-muted\"></Card.Footer>\r\n                                </Card>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <ModalWindowContainer \r\n                        show={this.state.showModal} \r\n                        onHide={hideModal} \r\n                        task={this.state.taskToEdit}\r\n                        refreshTasks={refreshTasks}\r\n                    />\r\n\r\n                    <br />\r\n                    <div className={s.card_blok}>\r\n                        <h1>Tasks shared to me</h1>\r\n                        <hr />\r\n                        {shareItems.map(item => (\r\n                            <div className={s.task_block}  key={item.taskname}>      \r\n                                <Card className=\"text-center\">\r\n                                    <Card.Header>Shared from: <b>{item.shareTo}</b></Card.Header>\r\n                                    <Card.Body>\r\n                                        <Card.Title>{item.taskname}</Card.Title>\r\n                                        <Card.Text>\r\n                                            {item.taskdescribe}<br />\r\n                                        </Card.Text>\r\n                                        <Button variant=\"primary\" onClick={() => this.setState({showModal: true, taskToEdit: item})}>Edit</Button>\r\n                                    </Card.Body>\r\n                                    <Card.Footer className=\"text-muted\"></Card.Footer>\r\n                                </Card>\r\n                            </div>\r\n                        ))}\r\n                     </div>\r\n                </Card>\r\n            );\r\n        }\r\n    }   \r\n}\r\nexport default Task;","import React, {Component} from \"react\";\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from \"../componentsStyle/Home.module.css\";\r\n\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: '',\r\n            username: '',\r\n            numerOfUserTasks: 0,\r\n            numerOfsharedTasks: 0\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let useremail = localStorage.getItem('CurrentUserEmail'); \r\n        this.state.username = localStorage.getItem('CurrentUser');\r\n        let user;\r\n        let task;\r\n      \r\n        for(user in users){\r\n            if(users[user].name ==this.state.username){\r\n               this.state.numerOfUserTasks = users[user].tasks.length;\r\n            }\r\n            for(task in users[user].tasks){\r\n                if(users[user].tasks[task].shareTo == useremail){\r\n                    this.state.numerOfsharedTasks++;\r\n                    console.log(this.state.numerOfsharedTasks)\r\n                }               \r\n            } \r\n        }\r\n        \r\n        this.setState({loaded: true})\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Hello <b>{this.state.username}</b>! </h1>\r\n                <h4>Check your tasks or create the new one by using header menu</h4>\r\n\r\n                <div className={s.tasks_info_block} align='center'>\r\n                    <h2 className={s.tasks_info_left}>For now you have:</h2>\r\n                    <div className={s.tasks_info_right}>\r\n                        <h3>Your tasks: <Badge variant=\"success\">{this.state.numerOfUserTasks}</Badge></h3>\r\n                        <h3>Shared to you tasks: <Badge variant=\"warning\">{this.state.numerOfsharedTasks}</Badge></h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React, {Component} from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from \"../componentsStyle/Task.module.css\";\r\n\r\n\r\nclass AddTask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            id: 0,\r\n            taskadded: false\r\n        }\r\n        this.onChangeTaskname = this.onChangeTaskname.bind(this);\r\n        this.onChangeTaskdescribe= this.onChangeTaskdescribe.bind(this);\r\n        this.onChangeSharename = this.onChangeSharename.bind(this);\r\n        this.onChangeShare = this.onChangeShare.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChangeTaskname(e) {\r\n       this.props.setTasknameText(e.target.value);\r\n    }\r\n    onChangeTaskdescribe(e) {\r\n        this.props.setTaskdescribeText(e.target.value);\r\n    }\r\n    onChangeSharename(e) {\r\n        this.props.setShareToText(e.target.value);\r\n     }\r\n    onChangeShare(e){\r\n        this.props.setTaskShare(e.target.value);\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        let users =  JSON.parse(localStorage.getItem('users'));\r\n        let username = localStorage.getItem('CurrentUser');\r\n        console.log(username, users);\r\n        for(user in users){ \r\n            console.log(users[user].name);\r\n            if(users[user].name == username){\r\n                this.state.id = users[user].tasks.length;\r\n            }\r\n        }\r\n        let user;\r\n        let newTask = {\r\n            id: this.state.id,\r\n            taskname: this.props.taskname, \r\n            taskdescribe: this.props.taskdescribe,\r\n            shareTo: this.props.shareTo,\r\n        }\r\n        for(user in users){ \r\n            console.log(users[user].name);\r\n            if(users[user].name == username){\r\n                let tasksNum = users[user].tasks.length;      \r\n                this.setState({id: tasksNum + 1});\r\n                users[user].tasks.push(newTask);\r\n                console.log('task added to tasks');\r\n            }\r\n        }\r\n        localStorage.setItem('users', JSON.stringify(users))\r\n        \r\n        this.setState({taskadded: true})\r\n        setTimeout(() => this.setState({taskadded: false}), 1500);\r\n    }\r\n    render() {\r\n        //message that shows you add task\r\n        let taskadded;\r\n        if(this.state.taskadded == true){\r\n            taskadded = <Alert variant='success'><b>Task added</b></Alert> \r\n        }\r\n        if(this.state.taskadded == false){\r\n            taskadded = <div></div>\r\n        }\r\n        //block for input to share task to other user\r\n        let shareblock;\r\n        if(this.props.share === 'true'){\r\n            shareblock = <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label className={s.new_task_label}>Add email of user yo want to share a task</Form.Label>\r\n            <Form.Control \r\n                name=\"shareTo\" \r\n                type=\"text\" \r\n                placeholder=\"Enter email to share\" \r\n                onChange={this.onChangeSharename} />\r\n         </Form.Group>\r\n        }\r\n        else{\r\n            shareblock = <div></div>\r\n        }\r\n            return (\r\n                <div>\r\n                    {taskadded}\r\n                    <Form onSubmit={this.onSubmit} className={s.new_task_block}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className={s.new_task_label}>Task name</Form.Label>\r\n                        <Form.Control \r\n                            name=\"taskname\" \r\n                            type=\"text\" \r\n                            placeholder=\"Enter short name of task\" \r\n                            value={this.props.taskname}\r\n                            onChange={this.onChangeTaskname} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className={s.new_task_label}>Task describe</Form.Label>\r\n                        <Form.Control \r\n                            className={s.describe_field} \r\n                            name=\"taskdescribe\" \r\n                            type=\"text\" \r\n                            placeholder=\"Describe a task\" \r\n                            value={this.props.taskdescribe}\r\n                            onChange={this.onChangeTaskdescribe} />\r\n                    </Form.Group>\r\n                    \r\n                    <fieldset>\r\n                    <Form.Group as={Row}>\r\n                    <Col sm={10}>\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"task for me only\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios1\"\r\n                        value='false'\r\n                        name=\"share\"\r\n                        onChange={this.onChangeShare}\r\n                        />\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"share task\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios2\"\r\n                        value='true'\r\n                        name=\"share\"\r\n                        onChange={this.onChangeShare}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    </fieldset>\r\n                    {shareblock}\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.props.disabled}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>  \r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nexport default AddTask;\r\n","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {setTasknameText, setTaskdescribeText, setShareToText, setTaskShare} from '../store/addtask/actions';\r\nimport AddTask from './AddTask';\r\n\r\n\r\nclass AddTaskContainer extends Component {\r\n    render() { \r\n        return <AddTask\r\n            email={this.props.email} \r\n            taskname={this.props.taskname} \r\n            taskdescribe={this.props.taskdescribe} \r\n            share={this.props.share}\r\n            shareTo={this.props.shareTo} \r\n            setShareToText={this.props.setShareToText}\r\n            setTaskShare={this.props.setTaskShare}\r\n            setTasknameText={this.props.setTasknameText} \r\n            setTaskdescribeText={this.props.setTaskdescribeText} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        email: state.signin.email,\r\n        taskname: state.addtask.taskname,\r\n        taskdescribe: state.addtask.taskdescribe,\r\n        share: state.addtask.share,\r\n        shareTo: state.addtask.shareTo\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setTasknameText,\r\n    setTaskdescribeText,\r\n    setShareToText,\r\n    setTaskShare\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskContainer);\r\n","import React, {Component} from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport s from '../componentsStyle/Header.module.css';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: null\r\n        }\r\n        \r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onEmailChange = this.onEmailChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n    }\r\n    onEmailChange(e) {\r\n        this.props.setEmailText(e.target.value)\r\n    }\r\n    onPasswordChange(e) {\r\n        this.props.setPasswordText(e.target.value)\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let user;\r\n        console.log('signining');\r\n        for(user in users){     \r\n            let userName;\r\n            let userEmail\r\n            if(users[user].email == this.props.email && users[user].password == this.props.password){\r\n                userName = users[user].name;\r\n                userEmail = users[user].email;\r\n                localStorage.setItem('CurrentUser', userName);\r\n                localStorage.setItem('CurrentUserEmail', userEmail);\r\n                this.setState({login: true});\r\n                window.location.href = '/home'\r\n            } else{\r\n                console.log('wrong email or password')\r\n                this.setState({\r\n                    login: null\r\n                })\r\n            }\r\n        }\r\n    }\r\n    render() {     \r\n        let faillogin;\r\n        if(this.state.login == false){\r\n            faillogin = <Alert variant='danger'> Wrong email or passwor</Alert> \r\n        }\r\n        if(this.state.login == true){\r\n            faillogin = <div></div>\r\n        }\r\n        return ( \r\n            <div className={s.form_sign_in}> \r\n            <br />\r\n            {faillogin}\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            placeholder=\"Enter email\" \r\n                            onChange={this.onEmailChange}\r\n                            value={this.props.email} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.props.password} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Sign in\r\n                    </Button>\r\n                </Form>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {setEmailText, setPasswordText} from '../store/signin/actions';\r\nimport SignIn from './SignIn';\r\n\r\nclass SignInContainer extends Component {\r\n    render() { \r\n        return <SignIn \r\n            email={this.props.email} \r\n            password={this.props.password}\r\n            setEmailText={this.props.setEmailText} \r\n            setPasswordText={this.props.setPasswordText} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        email: state.signin.email,\r\n        password: state.signin.password\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps =  {\r\n    setEmailText,\r\n    setPasswordText\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInContainer);","import React, {Component} from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from \"../componentsStyle/Header.module.css\";\r\n\r\nclass SignUp extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            passCheck: null\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onNicknameChange = this.onNicknameChange.bind(this);\r\n        this.onEmailChange = this.onEmailChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.onRepeatPasswordChange = this.onRepeatPasswordChange.bind(this);\r\n\r\n       \r\n    }\r\n    onNicknameChange(e) {\r\n        this.props.setNicknameText(e.target.value)\r\n    }\r\n    onEmailChange(e) {\r\n        this.props.setEmailText(e.target.value)\r\n    }\r\n    onPasswordChange(e) {\r\n        this.props.setPasswordText(e.target.value)\r\n        if(e.target.value === this.props.repeatPassword) {\r\n            this.props.setDisabledText('');\r\n        }\r\n        else {\r\n            this.props.setDisabledText('disabled');\r\n        }\r\n    }\r\n    onRepeatPasswordChange(e) {\r\n        this.props.setRepeatPasswordText(e.target.value);\r\n        if(e.target.value === this.props.password) {\r\n            this.props.setDisabledText('');\r\n            this.setState({\r\n                passCheck: true\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                passCheck: false\r\n            })\r\n            console.log('not ok');\r\n            this.props.setDisabledText('disabled');\r\n        }\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault(); \r\n        console.log('saved');\r\n        let newUser = {name: this.props.nickname, email: this.props.email, password: this.props.password, tasks: []};\r\n        let firstUser = [newUser];\r\n        console.log(localStorage.getItem('users'));\r\n        if(!localStorage.getItem('users')) {\r\n            console.log('empty');\r\n            localStorage.setItem('users', JSON.stringify(firstUser));\r\n        } else{\r\n            console.log('adding user');\r\n            let users = JSON.parse(localStorage.getItem('users'));\r\n            users.push(newUser);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n        }\r\n        //this.context.router.transitionTo('/SignIn');\r\n    }\r\n    render() {\r\n        let passCheck;\r\n        if(this.state.passCheck == false){\r\n            passCheck = <Alert variant='danger'>password do not match</Alert> \r\n        }\r\n        if(this.state.login == true){\r\n            passCheck = <div></div>\r\n        }\r\n        return (\r\n            <div className={s.form_sign_in}>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Nickname</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            name=\"nickname\" \r\n                            placeholder=\"Enter nickname\" \r\n                            value={this.props.nickname}\r\n                            onChange={this.onNicknameChange}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            name=\"email\" \r\n                            placeholder=\"Enter email\" \r\n                            value={this.props.email}\r\n                            onChange={this.onEmailChange}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Enter password</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            placeholder=\"Password\" \r\n                            value={this.props.password}\r\n                            onChange={this.onPasswordChange} />\r\n                    </Form.Group>\r\n\r\n                    {passCheck}\r\n\r\n                    <Form.Group controlId=\"confirmFormBasicPassword\">\r\n                        <Form.Label>Confirm your password</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            placeholder=\"Repeat password\" \r\n                            value={this.props.repeatPassword}\r\n                            onChange={this.onRepeatPasswordChange}\r\n                            />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" name=\"submitbutton\" type=\"submit\" disabled={this.props.disabled}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SignUp;","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {setEmailText, setPasswordText, setRepeatPasswordText, setDisabledText, setNicknameText} from '../store/signup/actions';\r\nimport SignUp from './SignUp';\r\n\r\nclass SignUpContainer extends Component {\r\n    render() { \r\n        return <SignUp \r\n            email={this.props.email} \r\n            password={this.props.password} \r\n            repeatPassword={this.props.repeatPassword}\r\n            nickname={this.props.nickname} \r\n            disabled = {this.props.disabled}\r\n            \r\n            setDisabledText = {this.props.setDisabledText}\r\n            setEmailText={this.props.setEmailText} \r\n            setPasswordText={this.props.setPasswordText}\r\n            setRepeatPasswordText={this.props.setRepeatPasswordText}\r\n            setNicknameText={this.props.setNicknameText} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        email: state.signup.email,\r\n        password: state.signup.password,\r\n        repeatPassword: state.signup.repeatPassword,\r\n        nickname: state.signup.nickname,\r\n        disabled: state.signup.disabled\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps =  {\r\n    setEmailText,\r\n    setPasswordText,\r\n    setRepeatPasswordText,\r\n    setNicknameText,\r\n    setDisabledText\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpContainer);","import React, {Component} from 'react';\r\nimport { HashRouter, Route} from \"react-router-dom\";\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport allRedusers from './store/reducer';\r\nimport Header from './components/Header';\r\nimport Task from './components/Task';\r\nimport Home from './components/Home'\r\nimport AddTaskContainer from './components/AddTaskContainer';\r\nimport SignInContainer from './components/SignInContainer';\r\nimport SignUpContainer from './components/SignUpContainer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst store = createStore(\r\n    allRedusers,\r\n    {},\r\n    );\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <HashRouter basename='/'>\r\n                    <div className=\"App\" align='center'>\r\n                        <Route path='/' component={Header}/>\r\n\r\n                        <Route exact path='/' component={SignInContainer}/>\r\n\r\n                        <Route exact path='/tasks' component={Task}/>\r\n\r\n                        <Route exact path='/home' component={Home}/>\r\n\r\n                        <Route exact path='/newTask' component={AddTaskContainer}/>\r\n\r\n                        <Route path='/SignUp' component={SignUpContainer}/>\r\n\r\n                        <Route path='/SignIn' component={SignInContainer}/>\r\n                    </div>\r\n                </HashRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task_block\":\"Task_task_block__28CuS\",\"new_task_block\":\"Task_new_task_block__2JVOd\",\"new_task_label\":\"Task_new_task_label__2HMW7\",\"describe_field\":\"Task_describe_field__38xFW\",\"lds_roller\":\"Task_lds_roller__2Pirh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_sign_in\":\"Header_form_sign_in__lcRBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks_info_block\":\"Home_tasks_info_block__2WQ5x\",\"tasks_info_right\":\"Home_tasks_info_right__2DycT\",\"tasks_info_left\":\"Home_tasks_info_left__3Uu4_\"};"],"sourceRoot":""}